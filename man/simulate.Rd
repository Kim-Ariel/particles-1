% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate.R
\name{simulate}
\alias{simulate}
\title{Start a simulation based on a graph}
\usage{
simulate(graph, alpha = 1, alpha_min = 0.001, alpha_decay = 1 -
  alpha_min^(1/300), alpha_target = 0, velocity_decay = 0.6,
  setup = default_genesis(), ...)
}
\arguments{
\item{graph}{A graph in a format supported by tidygraph}

\item{alpha}{The starting alpha value. See Details.}

\item{alpha_min}{The minimum alpha value after which the simulation is
terminated. See Details.}

\item{alpha_decay}{The speed at which the alpha value decreases. See Details.}

\item{alpha_target}{The alpha value that alpha drifts towards. See Details.}

\item{velocity_decay}{The dampening factor of the system. See Details.}

\item{setup}{A function that takes the particle graph and returns a start
position and velocity to each particle.}

\item{...}{Additional parameters for the simulation (currently ignored)}
}
\value{
A simulation object
}
\description{
This function initiates a simulation based on the provided graph and
parameters. Any graph structure with a \code{\link[tidygraph:as_tbl_graph]{tidygraph::as_tbl_graph()}} method
is supported as input. This function does not start the simulation but merely
sets it up.
}
\details{
A simulation in the context of the particles package is a series of
equidistant steps where the velocity and position of each particle is
updated. A few global rules applies to this cycle irrespectively of the
forces added to the simulation. Once a simulation is initiated an \code{alpha}
value is defined (defaults to \code{1}). At each step this alpha value is
decreased according to its distance to the \code{alpha_target} (defaults to \code{0})
and \code{alpha_decay} (defaults to ~\code{0.023}). Once the alpha value gets below
\code{alpha_min} (defaults to \code{0.001}) the simulation seizes to take additional
steps. The default values is adapted from the d3-force implementation and
corresponds to 300 steps. Conceptually the \code{alpha} progression can be seen
as a cooling off of the system as the value decreases quiclky in the
beginning and then slowly reach the target value. If it is not intended to
have a system that cools off, simply set the \code{alpha_target} value to the same
as \code{alpha}. At each step, after the new particle velocities has been
calculated but before they have been applied to the positions, a dampening
factor (\code{velocity_decay}) is applied in order to simulate the gradual loss
of momentum. If this is not intended for the simulation, simply set the value
to \code{1}.
}
\examples{
graph <- igraph::make_graph('folkman')
graph \%>\%
  simulate()

}
